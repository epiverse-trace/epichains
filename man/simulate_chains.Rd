% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate.R
\name{simulate_chains}
\alias{simulate_chains}
\title{Simulate transmission chains from an initial number of infections}
\usage{
simulate_chains(
  index_cases,
  statistic = c("size", "length"),
  offspring_dist,
  ...,
  stat_max = Inf,
  pop = Inf,
  percent_immune = 0,
  generation_time = NULL,
  t0 = 0,
  tf = Inf
)
}
\arguments{
\item{index_cases}{Number of index cases to simulate transmission chains for.}

\item{statistic}{\verb{<String>}; Chain statistic to track as the stopping
criteria for each chain being simulated when \code{stat_max} is not \code{Inf}.
Can be one of:
\itemize{
\item "size": the total number of cases produced by a chain before it goes
extinct.
\item "length": the total number of ancestors produced by a chain before
it goes extinct.
}}

\item{offspring_dist}{Offspring distribution: a \verb{<character>} string
corresponding to the R distribution function (e.g., "pois" for Poisson,
where \code{\link{rpois}} is the R function to generate Poisson random
numbers).}

\item{...}{Parameters of the offspring distribution as required by R.}

\item{stat_max}{A cut off for the chain statistic (size/length) being
computed. Results above \code{stat_max} are set to \code{stat_max}. Defaults to \code{Inf}.}

\item{pop}{\verb{<Integer>}; Population size. Used alongside \code{percent_immune}. to
define the susceptible population. Defaults to \code{Inf}.}

\item{percent_immune}{\verb{<numeric>}; Percent of the population immune to
infection at the start of the simulation. Used alongside \code{pop} to initialise
the susceptible population. Accepted values lie between 0 and 1.
Defaults to 0.}

\item{generation_time}{The generation time function; the name
of a user-defined named or anonymous function with only one argument \code{n},
representing the number of generation times to sample.}

\item{t0}{Start time (if generation time is given); either a single value
or a vector of same length as \code{index_cases} (number of initial cases) with
corresponding initial times. Defaults to 0, meaning all cases started at
time 0.}

\item{tf}{Cut-off for the infection times (if generation time is given).
Defaults to \code{Inf}.}
}
\value{
An \verb{<epichains_tree>} object, which is basically a \verb{<data.frame>}
with columns \code{infectee_id}, \code{sim_id} (a unique ID within each simulation
for each infectee), \code{infector_id}, \code{generation}, and \code{time} (of infection)
}
\description{
Simulate transmission chains from an initial number of infections
}
\section{Calculating chain sizes and lengths}{
The function simulates the chain size for individual \eqn{i} at time
\eqn{t}, \eqn{I_{t, i}}, as:
\deqn{I_{t, i} = \sum_{i}^{I_{t-1}}X_{t, i},}
and the chain length/duration for individual \eqn{i} at time \eqn{t},
\eqn{L_{t, i}}, as:
\deqn{L_{t, i} = {\sf min}(1, X_{t, i}), }
where \eqn{X_{t, i}} is the secondary cases generated by individual \eqn{i}
at time \eqn{t}, and \eqn{I_{0, i} = L_{0, i} = 1}.

The distribution of secondary cases, \eqn{X_{t, i}} is modelled by the
offspring distribution (\code{offspring_dist}).
\subsection{Specifying \code{generation_time}}{

\code{generation_time} must be specified as a function with one argument, \code{n}.

For example, assuming we want to specify the generation time as a random
log-normally distributed variable with \code{meanlog = 0.58} and \code{sdlog = 1.58},
we could define a named function, let's call it "generation_time_fn",
with only one argument representing the number of generation times to
sample: \code{generation_time_fn <- function(n){rlnorm(n, 0.58, 1.38)}},
and assign the name of the function to \code{generation_time} in
the simulation function, i.e.
\code{`simulate_*`(..., generation_time = generation_time_fn)},
where \code{...} are the other arguments to \verb{simulate_*()} and * is a placeholder
for the rest of simulation function's name.

Alternatively, we could assign an anonymous function to \code{generation_time}
in the \verb{simulate_*()} call, i.e.
\code{simulate_*(..., generation_time = function(n){rlnorm(n, 0.58, 1.38)})}
OR \code{simulate_*(..., generation_time = \(n){rlnorm(n, 0.58, 1.38)})},
where \code{...} are the other arguments to \verb{simulate_*()}.
}
}

\examples{
set.seed(123)
# Using a Poisson offspring distribution
chains_pois_offspring <- simulate_chains(
  index_cases = 10,
  pop = 100,
  percent_immune = 0,
  statistic = "size",
  offspring_dist = "pois",
  stat_max = 10,
  generation_time = function(n) rep(3, n),
  lambda = 2
)
chains_pois_offspring

# Using a Negative binomial offspring distribution
chains_nbinom_offspring <- simulate_chains(
  index_cases = 10,
  pop = 100,
  percent_immune = 0,
  statistic = "size",
  offspring_dist = "nbinom",
  stat_max = 10,
  generation_time = function(n) rep(3, n),
  mu = 2,
  size = 0.2
)
chains_nbinom_offspring
}
\references{
Jacob C. (2010). Branching processes: their role in epidemiology.
International journal of environmental research and public health, 7(3),
1186–1204. \doi{https://doi.org/10.3390/ijerph7031204}

Blumberg, S., and J. O. Lloyd-Smith. 2013. "Comparing Methods for
Estimating R0 from the Size Distribution of Subcritical Transmission
Chains." Epidemics 5 (3): 131–45.
\doi{https://doi.org/10.1016/j.epidem.2013.05.002}.

Farrington, C. P., M. N. Kanaan, and N. J. Gay. 2003.
"Branching Process Models for Surveillance of Infectious Diseases
Controlled by Mass Vaccination.” Biostatistics (Oxford, England)
4 (2): 279–95. \doi{https://doi.org/10.1093/biostatistics/4.2.279}.
}
\seealso{
\itemize{
\item \code{\link[=simulate_summary]{simulate_summary()}} for simulating transmission chains the vector of
chain statistics (sizes or lengths) without tracking the infection tree.
This is an abridged version of \code{simulate_chains()} that is faster and
uses less memory.
}
}
\author{
James M. Azam, Sebastian Funk
}
